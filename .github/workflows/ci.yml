on:
  push:
    branches:
      - '**'
#  pull_request:
#    branches:
#      - '**'

name: CI

jobs:
  build_ubuntu:
    name: Build Ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      - name: Add nightly toolchain component
        working-directory: crates/dream-runner
        run: rustup component add rust-src --toolchain nightly-2022-12-12-x86_64-unknown-linux-gnu
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
  build_web:
    name: Build Web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: jetli/wasm-pack-action@v0.4.0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      - name: Add nightly toolchain component
        working-directory: crates/dream-runner
        run: rustup component add rust-src --toolchain nightly-2022-12-12-x86_64-unknown-linux-gnu
      - name: Build
        working-directory: crates/dream-runner
        run: rustup run nightly-2022-12-12 wasm-pack build --target web --out-dir ../../web/build --release
#  deploy_web:
#    name: Deploy Web
#    runs-on: ubuntu-latest
#    needs: build_web
#    steps:
#      - uses: actions/checkout@v2
#      - uses: jetli/wasm-pack-action@v0.4.0
#      - name: Extract branch name
#        shell: bash
#        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
#        id: extract_branch
#      - uses: actions-rs/toolchain@v1
#        with:
#          toolchain: nightly
#      - name: Add Toolchain
  #        working-directory: crates/dream-runner
  #        run: rustup component add rust-src --toolchain nightly-2022-12-12-x86_64-unknown-linux-gnu
  #      - name: Build web
  #        working-directory: crates/dream-runner
  #        run: rustup run nightly-2022-12-12 wasm-pack build --target web --out-dir ../../web/build --release
  #      - name: Delete web git ignore
  #        working-directory: web
  #        run: rm -rf .gitignore
  #      - name: Delete web/build git ignore
  #        working-directory: web/build
  #        run: rm -rf .gitignore
  #      - name: Deploy
  #        uses: crazy-max/ghaction-github-pages@v1
  #        with:
  #          target_branch: ${{ steps.extract_branch.outputs.branch }}-web-demo
  #          build_dir: web
  #        env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy_web:
    name: Deploy Web
    runs-on: ubuntu-latest
    needs: build_web
    steps:
      - uses: actions/checkout@v2
      - uses: jetli/wasm-pack-action@v0.4.0
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      - name: Add Toolchain
        working-directory: crates/dream-runner
        run: rustup component add rust-src --toolchain nightly-2022-12-12-x86_64-unknown-linux-gnu
      - name: Build web
        working-directory: crates/dream-runner
        run: rustup run nightly-2022-12-12 wasm-pack build --target web --out-dir ../../web/build --release
      - name: Delete web git ignore
        working-directory: web
        run: rm -rf .gitignore
      - name: Delete web/build git ignore
        working-directory: web/build
        run: rm -rf .gitignore
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.14
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "dream-rs-staging"
          heroku_email: "rdeepak2002@gmail.com"
          appdir: "web"

      # TODO: only call deploy to heroku on PR (which should create a reviewing app) or main push

      #      - name: Heroku Deploy Step 0
      #        working-directory: web/build
      #        run: heroku config:set MY_API_KEY=


      #      - name: Heroku Deploy Step 1
      #        working-directory: web/build
      #        run: rm -rf .git
      #      - name: Heroku Deploy Step 2
      #        working-directory: web/build
      #        run: git init
      #      - name: Heroku Deploy Step 3
      #        working-directory: web/build
      #        run: git add .
      #      - name: Heroku Deploy Step 4
      #        working-directory: web/build
      #        run: git commit -m "deploy"

      #      - name: Heroku Deploy Step 5
      #        working-directory: web/build
      #        run: git remote add heroku git@heroku.com:dream-rs.git

#
#      - name: Heroku Deploy Step 5
#        working-directory: web/build
#        run: git push git@heroku.com:dream-rs.git -f
#      - name: Heroku Deploy Step 6
#        working-directory: web/build
#        run: rm -fr .git
#

#      - name: Deploy
#        uses: crazy-max/ghaction-github-pages@v1
#        with:
#          target_branch: ${{ steps.extract_branch.outputs.branch }}-web-demo
#          build_dir: web
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}